/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
$arrow_left_name = 'arrow-left';
$arrow_left_x = 267px;
$arrow_left_y = 175px;
$arrow_left_offset_x = -267px;
$arrow_left_offset_y = -175px;
$arrow_left_width = 35px;
$arrow_left_height = 50px;
$arrow_left_total_width = 377px;
$arrow_left_total_height = 313px;
$arrow_left_image = '../img/sprite.png';
$arrow_left = 267px 175px -267px -175px 35px 50px 377px 313px '../img/sprite.png' 'arrow-left';
$arrow_right_name = 'arrow-right';
$arrow_right_x = 304px;
$arrow_right_y = 175px;
$arrow_right_offset_x = -304px;
$arrow_right_offset_y = -175px;
$arrow_right_width = 35px;
$arrow_right_height = 50px;
$arrow_right_total_width = 377px;
$arrow_right_total_height = 313px;
$arrow_right_image = '../img/sprite.png';
$arrow_right = 304px 175px -304px -175px 35px 50px 377px 313px '../img/sprite.png' 'arrow-right';
$penagem_01_name = 'penagem-01';
$penagem_01_x = 151px;
$penagem_01_y = 175px;
$penagem_01_offset_x = -151px;
$penagem_01_offset_y = -175px;
$penagem_01_width = 114px;
$penagem_01_height = 119px;
$penagem_01_total_width = 377px;
$penagem_01_total_height = 313px;
$penagem_01_image = '../img/sprite.png';
$penagem_01 = 151px 175px -151px -175px 114px 119px 377px 313px '../img/sprite.png' 'penagem-01';
$penagem_02_name = 'penagem-02';
$penagem_02_x = 201px;
$penagem_02_y = 0px;
$penagem_02_offset_x = -201px;
$penagem_02_offset_y = 0px;
$penagem_02_width = 176px;
$penagem_02_height = 173px;
$penagem_02_total_width = 377px;
$penagem_02_total_height = 313px;
$penagem_02_image = '../img/sprite.png';
$penagem_02 = 201px 0px -201px 0px 176px 173px 377px 313px '../img/sprite.png' 'penagem-02';
$penagem_03_name = 'penagem-03';
$penagem_03_x = 0px;
$penagem_03_y = 0px;
$penagem_03_offset_x = 0px;
$penagem_03_offset_y = 0px;
$penagem_03_width = 199px;
$penagem_03_height = 173px;
$penagem_03_total_width = 377px;
$penagem_03_total_height = 313px;
$penagem_03_image = '../img/sprite.png';
$penagem_03 = 0px 0px 0px 0px 199px 173px 377px 313px '../img/sprite.png' 'penagem-03';
$penagem_04_name = 'penagem-04';
$penagem_04_x = 0px;
$penagem_04_y = 175px;
$penagem_04_offset_x = 0px;
$penagem_04_offset_y = -175px;
$penagem_04_width = 149px;
$penagem_04_height = 138px;
$penagem_04_total_width = 377px;
$penagem_04_total_height = 313px;
$penagem_04_image = '../img/sprite.png';
$penagem_04 = 0px 175px 0px -175px 149px 138px 377px 313px '../img/sprite.png' 'penagem-04';
$spritesheet_width = 377px;
$spritesheet_height = 313px;
$spritesheet_image = '../img/sprite.png';
$spritesheet_sprites = $arrow_left $arrow_right $penagem_01 $penagem_02 $penagem_03 $penagem_04;
$spritesheet = 377px 313px '../img/sprite.png' $spritesheet_sprites;

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
spriteWidth($sprite) {
  width: $sprite[4];
}

spriteHeight($sprite) {
  height: $sprite[5];
}

spritePosition($sprite) {
  background-position: $sprite[2] $sprite[3];
}

spriteImage($sprite) {
  background-image: url($sprite[8]);
}

sprite($sprite) {
  spriteImage($sprite)
  spritePosition($sprite)
  spriteWidth($sprite)
  spriteHeight($sprite)
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
sprites($sprites) {
  for $sprite in $sprites {
    $sprite_name = $sprite[9];
    .{$sprite_name} {
      sprite($sprite);
    }
  }
}
